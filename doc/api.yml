openapi: '3.0.2'
info:
  title: JCloudify Api
  version: 'latest'
servers:
  - url: https://api.preprod.jcloudify.com

paths:
  /ping:
    get:
      tags:
        - Health
      operationId: ping
      responses:
        '200':
          description: pong
          content:
            text/plain:
              schema:
                type: string
                example: pong
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /whoami:
    $ref: "./security-api.yml#/operations/whoami"
  /token:
    $ref: "./security-api.yml#/operations/token"
  /gh-repos/{repo_owner}/{repo_name}/upload-build-uri:
    $ref: "./env-deploy-api.yml#/operations/uploadUri"
  /gh-repos/{repo_owner}/{repo_name}/env-deploys:
    $ref: "./env-deploy-api.yml#/operations/deploys"
  /users:
    $ref: "./user-api.yaml#/operations/users"
  /poja-versions:
    $ref: "./poja-related-api.yml#/operations/versions"
  /users/{userId}/installations:
    $ref: "./github-app-installation-api.yml#/operations/installations"
  /users/{userId}/billing:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/startTime"
      - $ref: "#/components/parameters/endTime"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - User
        - Billing
      operationId: getUserBillingInfo
      summary: get user latest computed billing info
      description: >
        get user latest computed billing info .
        current day's data might not be accurate as resource usage
        might still occur at the moment and computation takes much time
        hence, the most accurate data will be of the past days.
      responses:
        '200':
          description: latest billing info summary before the date-time interval, range is inclusive
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/BillingInfo"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications:
    $ref: "./application-api.yml#/operations/applications"
  /users/{userId}/applications/{applicationId}:
    $ref: "./application-api.yml#/operations/applicationsById"
  /users/{userId}/applications/{applicationId}/billing:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/applicationId"
      - $ref: "#/components/parameters/startTime"
      - $ref: "#/components/parameters/endTime"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Application
        - Billing
      operationId: getUserApplicationBillingInfo
      summary: get user latest computed billing info grouped by app
      description: >
        get user latest computed billing info grouped by app.
        current day's data might not be accurate as resource usage
        might still occur at the moment and computation takes much time
        hence, the most accurate data will be of the past days.
      responses:
        '200':
          description: latest billing info summary before the date-time interval, range is inclusive
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingInfo"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments:
    $ref: "./environment-api.yml#/operations/environments"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}:
    $ref: "./environment-api.yml#/operations/environmentsById"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/billing:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/applicationId"
      - $ref: "#/components/parameters/environmentId"
      - $ref: "#/components/parameters/startTime"
      - $ref: "#/components/parameters/endTime"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Environment
        - Billing
      operationId: getUserAppEnvironmentBillingInfo
      summary: get user latest computed billing info grouped by env
      description: >
        get user latest computed billing info grouped by env.
        current day's data might not be accurate as resource usage
        might still occur at the moment and computation takes much time
        hence, the most accurate data will be of the past days.
      responses:
        '200':
          description: latest billing info summary before the date-time interval, range is inclusive
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/BillingInfo"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments/{environmentId}/config:
    $ref: "./environment-api.yml#/operations/environmentConfig"
  /users/{userId}/applications/{applicationId}/deployments:
    $ref: "./application-api.yml#/operations/applicationDeployments"
  /users/{userId}/applications/{applicationId}/deployments/{deploymentId}:
    $ref: "./application-api.yml#/operations/applicationDeploymentsById"
  /users/{userId}/applications/{applicationId}/deployments/{deploymentId}/config:
    $ref: "./application-api.yml#/operations/applicationDeploymentConfig"
  /users/{userId}/applications/{applicationId}/deployments/{deploymentId}/states:
    $ref: "./application-api.yml#/operations/applicationDeploymentStates"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/deletionInitiation:
    $ref: "./stack-api.yml#/operations/deleteStack"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/deploymentInitiation:
    $ref: "./stack-api.yml#/operations/deployStack"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/stacks:
    $ref: "./stack-api.yml#/operations/stacks"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/stacks/{stackId}:
    $ref: "./stack-api.yml#/operations/stacksById"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/stacks/{stackId}/events:
    $ref: "./stack-api.yml#/operations/events"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/stacks/{stackId}/outputs:
    $ref: "./stack-api.yml#/operations/outputs"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/computeStackResources:
    $ref: "./stack-api.yml#/operations/computeStackResources"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/variables:
    $ref: "./environment-api.yml#/operations/environmentVariables"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/variables/{variableId}:
    $ref: "./environment-api.yml#/operations/environmentVariablesById"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/ssmparameters:
    $ref: "./environment-api.yml#/operations/environmentSsmParameters"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/functions/{functionName}/logGroups:
    $ref: "./environment-api.yml#/operations/environmentLogGroups"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/functions/{functionName}/logStreams:
    $ref: "./environment-api.yml#/operations/environmentLogStreams"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/functions/{functionName}/logStreamEvents:
    $ref: "./environment-api.yml#/operations/environmentLogStreamEvents"
  /users/{userId}/payment-details/payment-methods:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Payment
      operationId: getPaymentMethods
      summary: Get customer's payment methods
      responses:
        '200':
          description: List of customer's payment methods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Payment
      operationId: managePaymentMethods
      summary: Manage user's payment methods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethodsAction"
      responses:
        '200':
          description: Updated payment methods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
  /users/{userId}/payment-details:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Payment
      operationId: getCustomer
      summary: Get payment details from payment service provider
      responses:
        '200':
          description: paymnet service customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomer'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Payment
      operationId: updatePaymentCustomer
      summary: Update Customer in payment service provider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentCustomer"
      responses:
        '200':
          description: Updated payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomer'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  parameters:
    userId:
      name: userId
      in: path
      description: The identifier of the user
      schema:
        type: string
      required: true
    applicationId:
      name: applicationId
      in: path
      description: The identifier of the application
      schema:
        type: string
      required: true
    environmentId:
      name: environmentId
      in: path
      description: The identifier of the environment
      schema:
        type: string
      required: true
    logId:
      name: logId
      in: path
      description: The identifier of the log of the specified environment
      schema:
        type: string
      required: true
    variableId:
      name: variableId
      in: path
      description: The identifier of the environment variable of the specified application
      schema:
        type: string
      required: true
    stackId:
      name: stackId
      in: path
      description: The identifier of the stack of a given environment
      schema:
        type: string
      required: true
    page:
      name: page
      in: query
      description: page number
      schema:
        type: integer
        minimum: 1
        default: 1
    page_size:
      name: page_size
      in: query
      description: page_size
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 30
    deploymentId:
      name: deploymentId
      in: path
      description: deploymentId
      required: true
      schema:
        type: string
    startTime:
      name: startTime
      in: query
      schema:
        type: string
        format: date-time
      required: true
    endTime:
      name: endTime
      in: query
      schema:
        type: string
        format: date-time
      required: true

  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestException'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorizedException'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceNotFoundException'
    '429':
      description: Too many requests to the API
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsException'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerException'

  schemas:
    #############################################
    ###############  Components #################
    #############################################
    PaymentMethod:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        brand:
          type: string
        last4:
          type: string
    PaymentMethodsAction:
      type: object
      properties:
        payment_method_id:
          type: string
        action:
          type: string
          enum:
            - ATTACH
            - DETACH
        set_default:
          type: boolean
          default: false
    PaymentCustomer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        default_payment_method:
          $ref: "#/components/schemas/PaymentMethod"
    BillingInfo:
      type: object
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        pricing_method:
          type: string
        compute_time:
          type: string
          format: date-time
        computed_price:
          type: number
        resource_invocation_total_duration:
          $ref: "#/components/schemas/Duration"
    Duration:
      type: object
      properties:
        amount:
          type: integer
        unit:
          $ref: "#/components/schemas/DurationUnit"
    DurationUnit:
      type: string
      enum:
        - MINUTES
    ##############################################################
    ###############  RequestBodies And Responses #################
    ##############################################################
    PagedResponse:
      type: object
      properties:
        page_size:
          type: integer
        page_number:
          type: integer
        has_previous:
          type: boolean
        count:
          type: integer
    PaymentMethodResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PaymentMethod"
    #############################################
    ###############  Exceptions #################
    #############################################
    ExceptionModel:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    BadRequestException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: BadRequestException
        message: Bad request
    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: NotAuthorizedException
        message: Not authorized
    ResourceNotFoundException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: ResourceNotFoundException
        message: Resource of type <T> identified by <I> not found
    TooManyRequestsException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: TooManyRequestsException
        message: Too many requests
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: InternalServerException
        message: Unexpected error
