openapi: '3.0.2'
info:
  title: JCloudify Api
  version: 'latest'
servers:
  - url: https://api.preprod.jcloudify.com

paths:
  /ping:
    get:
      tags:
        - Health
      operationId: ping
      responses:
        '200':
          description: pong
          content:
            text/plain:
              schema:
                type: string
                example: pong
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /whoami:
    $ref: "./security-api.yml#/operations/whoami"
  /token:
    $ref: "./security-api.yml#/operations/token"
  /gh-repos/{repo_owner}/{repo_name}/upload-build-uri:
    get:
      tags:
        - Env_Deploy
      summary: creates an URI for zip package build upload
      operationId: createFileUploadUri
      parameters:
        - name: repo_owner
          description: github repository owner containing the app
          schema:
            type: string
          required: true
          in: path
        - name: repo_name
          description: github repository name containing the app
          schema:
            type: string
          required: true
          in: path
        - name: environment_type
          description: environment type
          schema:
            $ref: "./environment-api.yml#/components/schemas/EnvironmentType"
          required: true
          in: query
      responses:
        '200':
          description: the presigned code uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildUploadRequestResponse'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
  /gh-repos/{repo_owner}/{repo_name}/env-deploys:
    put:
      tags:
        - Env_Deploy
      summary: deploys all of the app env stacks
      operationId: deployEnv
      parameters:
        - name: repo_owner
          description: github repository owner containing the app
          schema:
            type: string
          required: true
          in: path
        - name: repo_name
          description: github repository name containing the app
          schema:
            type: string
          required: true
          in: path
        - name: environment_type
          description: environment type
          schema:
            $ref: "./environment-api.yml#/components/schemas/EnvironmentType"
          required: true
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuiltEnvInfo"
      responses:
        '200':
          description: OK if the deployment request has no issue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuiltEnvInfo"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
  /users:
    $ref: "./user-api.yaml#/operations/users"
  /poja-versions:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - PojaVersions
      operationId: getPojaVersions
      summary: get all ready poja versions
      responses:
        '200':
          description: the poja versions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PojaVersionsResponse"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
  /users/{userId}/installations:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - GithubAppInstallation
      operationId: getUserInstallations
      summary: get all user installations of jcloudify app
      responses:
        '200':
          description: list of installations
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/GithubAppInstallationsResponse"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - GithubAppInstallation
      operationId: crupdateGithubAppInstallations
      summary: for each installation, it will create if id exist, update it otherwise
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/CrupdateGithubAppInstallationsRequestBody"
      responses:
        '200':
          description: created or updated installations
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/CrupdateGithubAppInstallationsResponse"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/billing:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/startTime"
      - $ref: "#/components/parameters/endTime"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - User
        - Billing
      operationId: getUserBillingInfo
      summary: get user latest computed billing info
      description: >
        get user latest computed billing info .
        current day's data might not be accurate as resource usage
        might still occur at the moment and computation takes much time
        hence, the most accurate data will be of the past days.
      responses:
        '200':
          description: latest billing info summary before the date-time interval, range is inclusive
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/BillingInfo"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications:
    $ref: "./application-api.yml#/operations/applications"
  /users/{userId}/applications/{applicationId}:
    $ref: "./application-api.yml#/operations/applicationsById"
  /users/{userId}/applications/{applicationId}/billing:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/applicationId"
      - $ref: "#/components/parameters/startTime"
      - $ref: "#/components/parameters/endTime"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Application
        - Billing
      operationId: getUserApplicationBillingInfo
      summary: get user latest computed billing info grouped by app
      description: >
        get user latest computed billing info grouped by app.
        current day's data might not be accurate as resource usage
        might still occur at the moment and computation takes much time
        hence, the most accurate data will be of the past days.
      responses:
        '200':
          description: latest billing info summary before the date-time interval, range is inclusive
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingInfo"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments:
    $ref: "./environment-api.yml#/operations/environments"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}:
    $ref: "./environment-api.yml#/operations/environmentsById"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/billing:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/applicationId"
      - $ref: "#/components/parameters/environmentId"
      - $ref: "#/components/parameters/startTime"
      - $ref: "#/components/parameters/endTime"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Environment
        - Billing
      operationId: getUserAppEnvironmentBillingInfo
      summary: get user latest computed billing info grouped by env
      description: >
        get user latest computed billing info grouped by env.
        current day's data might not be accurate as resource usage
        might still occur at the moment and computation takes much time
        hence, the most accurate data will be of the past days.
      responses:
        '200':
          description: latest billing info summary before the date-time interval, range is inclusive
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/BillingInfo"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments/{environmentId}/config:
    $ref: "./environment-api.yml#/operations/environmentConfig"
  /users/{userId}/applications/{applicationId}/deployments:
    $ref: "./application-api.yml#/operations/applicationDeployments"
  /users/{userId}/applications/{applicationId}/deployments/{deploymentId}:
    $ref: "./application-api.yml#/operations/applicationDeploymentsById"
  /users/{userId}/applications/{applicationId}/deployments/{deploymentId}/config:
    $ref: "./application-api.yml#/operations/applicationDeploymentConfig"
  /users/{userId}/applications/{applicationId}/deployments/{deploymentId}/states:
    $ref: "./application-api.yml#/operations/applicationDeploymentStates"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/deletionInitiation:
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/environmentId'
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Stack
      summary: Delete existing stacks
      operationId: initiateStackDeletion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateStackDeletionRequestBody'
      responses:
        '200':
          description: Deployment successfully initiated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InitiateStackDeletionResponse"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/deploymentInitiation:
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/environmentId'
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Stack
      summary: Update if stack already exists, create new one otherwise
      description: Only COMPUTE_PERMISSION, EVENT, STORAGE_BUCKET, STORAGE_DATABASE_SQLITE stack type crupdate can be manually triggered
      operationId: initiateStackDeployment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InitiateStackDeploymentRequestBody"
      responses:
        '200':
          description: Deployment successfully initiated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InitiateStackDeploymentResponse"
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments/{environmentId}/stacks:
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/environmentId'
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Stack
      operationId: getEnvironmentStacks
      summary: Get list of stacks for a given environment
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      responses:
        '200':
          description: paged list of stacks of an environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedStacksResponse'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments/{environmentId}/stacks/{stackId}:
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/environmentId'
      - $ref: '#/components/parameters/stackId'
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Stack
      operationId: getStackById
      summary: Get the identified stack
      responses:
        '200':
          description: The identified stack
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stack'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments/{environmentId}/stacks/{stackId}/events:
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/environmentId'
      - $ref: '#/components/parameters/stackId'
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Stack
      operationId: getStackEvents
      summary: Get detailed events of a the identified stack
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      responses:
        '200':
          description: paged list of stack events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedStackEvents'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments/{environmentId}/stacks/{stackId}/outputs:
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/environmentId'
      - $ref: '#/components/parameters/stackId'
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Stack
      operationId: getStackOutputs
      summary: Get outputs of a the identified stack
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      responses:
        '200':
          description: paged list of stack outputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedStackOutputs'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments/{environmentId}/computeStackResources:
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/applicationId'
      - $ref: '#/components/parameters/environmentId'
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Stack
      operationId: getComputeStackResources
      summary: Get function names of an environment compute stack
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      responses:
        '200':
          description: paged list of an environment compute stack
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedComputeStackResource'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

  /users/{userId}/applications/{applicationId}/environments/{environmentId}/variables:
    $ref: "./environment-api.yml#/operations/environmentVariables"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/variables/{variableId}:
    $ref: "./environment-api.yml#/operations/environmentVariablesById"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/ssmparameters:
    $ref: "./environment-api.yml#/operations/environmentSsmParameters"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/functions/{functionName}/logGroups:
    $ref: "./environment-api.yml#/operations/environmentLogGroups"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/functions/{functionName}/logStreams:
    $ref: "./environment-api.yml#/operations/environmentLogStreams"
  /users/{userId}/applications/{applicationId}/environments/{environmentId}/functions/{functionName}/logStreamEvents:
    $ref: "./environment-api.yml#/operations/environmentLogStreamEvents"
  /users/{userId}/payment-details/payment-methods:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Payment
      operationId: getPaymentMethods
      summary: Get customer's payment methods
      responses:
        '200':
          description: List of customer's payment methods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Payment
      operationId: managePaymentMethods
      summary: Manage user's payment methods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethodsAction"
      responses:
        '200':
          description: Updated payment methods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
  /users/{userId}/payment-details:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Payment
      operationId: getCustomer
      summary: Get payment details from payment service provider
      responses:
        '200':
          description: paymnet service customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomer'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Payment
      operationId: updatePaymentCustomer
      summary: Update Customer in payment service provider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentCustomer"
      responses:
        '200':
          description: Updated payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomer'
        '400':
          $ref: './api.yml#/components/responses/400'
        '403':
          $ref: './api.yml#/components/responses/403'
        '404':
          $ref: './api.yml#/components/responses/404'
        '429':
          $ref: './api.yml#/components/responses/429'
        '500':
          $ref: './api.yml#/components/responses/500'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  parameters:
    userId:
      name: userId
      in: path
      description: The identifier of the user
      schema:
        type: string
      required: true
    applicationId:
      name: applicationId
      in: path
      description: The identifier of the application
      schema:
        type: string
      required: true
    environmentId:
      name: environmentId
      in: path
      description: The identifier of the environment
      schema:
        type: string
      required: true
    logId:
      name: logId
      in: path
      description: The identifier of the log of the specified environment
      schema:
        type: string
      required: true
    variableId:
      name: variableId
      in: path
      description: The identifier of the environment variable of the specified application
      schema:
        type: string
      required: true
    stackId:
      name: stackId
      in: path
      description: The identifier of the stack of a given environment
      schema:
        type: string
      required: true
    page:
      name: page
      in: query
      description: page number
      schema:
        type: integer
        minimum: 1
        default: 1
    page_size:
      name: page_size
      in: query
      description: page_size
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 30
    deploymentId:
      name: deploymentId
      in: path
      description: deploymentId
      required: true
      schema:
        type: string
    startTime:
      name: startTime
      in: query
      schema:
        type: string
        format: date-time
      required: true
    endTime:
      name: endTime
      in: query
      schema:
        type: string
        format: date-time
      required: true

  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestException'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorizedException'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceNotFoundException'
    '429':
      description: Too many requests to the API
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsException'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerException'

  schemas:
    #############################################
    ###############  Components #################
    #############################################
    ComputeStackResource:
      type: object
      properties:
        id:
          type: string
        environment_id:
          type: string
        frontal_function_name:
          type: string
        worker_1_function_name:
          type: string
        worker_2_function_name:
          type: string
        creation_datetime:
          type: string
          format: date-time

    StackDeployment:
      type: object
      properties:
        stack_type:
          $ref: '#/components/schemas/StackType'
    Stack:
      allOf:
        - $ref: '#/components/schemas/StackDeployment'
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        cf_stack_id:
          type: string
        creation_datetime:
          type: string
          format: date-time
        update_datetime:
          type: string
          format: date-time
        application:
          $ref: './application-api.yml#/components/schemas/ApplicationBase'
        environment:
          $ref: './environment-api.yml#/components/schemas/Environment'
        archived:
          type: boolean
          default: false
    StackType:
      type: string
      enum:
        - EVENT
        - COMPUTE_PERMISSION
        - STORAGE_BUCKET
        - STORAGE_DATABASE_SQLITE
        - COMPUTE
    StackEvent:
      type: object
      properties:
        event_id:
          type: string
        logical_resource_id:
          type: string
          description: The AWS identifier of the resource
        resource_type:
          type: string
        timestamp:
          type: string
          format: date-time
        resource_status:
          $ref: '#/components/schemas/StackResourceStatusType'
        status_message:
          type: string
          description: Detailed reason of the status
    StackResourceStatusType:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - CREATE_COMPLETE
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
        - DELETE_COMPLETE
        - DELETE_SKIPPED
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED
        - UPDATE_COMPLETE
        - IMPORT_FAILED
        - IMPORT_COMPLETE
        - IMPORT_IN_PROGRESS
        - IMPORT_ROLLBACK_IN_PROGRESS
        - IMPORT_ROLLBACK_FAILED
        - IMPORT_ROLLBACK_COMPLETE
        - UPDATE_ROLLBACK_IN_PROGRESS
        - UPDATE_ROLLBACK_COMPLETE
        - UPDATE_ROLLBACK_FAILED
        - ROLLBACK_IN_PROGRESS
        - ROLLBACK_COMPLETE
        - ROLLBACK_FAILED
        - UNKNOWN_TO_SDK_VERSION
    StackOutput:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        description:
          type: string

    PojaVersion:
      type: object
      properties:
        major:
          type: integer
        minor:
          type: integer
        patch:
          type: integer
        human_readable_value:
          type: string
    CreateGithubAppInstallation:
      type: object
      properties:
        id:
          type: string
        gh_installation_id:
          type: integer
          format: int64
    GithubAppInstallation:
      type: object
      allOf:
        - $ref: "#/components/schemas/CreateGithubAppInstallation"
      properties:
        owner:
          type: string
        type:
          type: string
        gh_avatar_url:
          type: string
    PaymentMethod:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        brand:
          type: string
        last4:
          type: string
    PaymentMethodsAction:
      type: object
      properties:
        payment_method_id:
          type: string
        action:
          type: string
          enum:
            - ATTACH
            - DETACH
        set_default:
          type: boolean
          default: false
    BuildUploadRequestResponse:
      type: object
      properties:
        build_template_file_uri:
          type: string
          format: uri
        uri:
          type: string
          format: uri
        filename:
          type: string
    PaymentCustomer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        default_payment_method:
          $ref: "#/components/schemas/PaymentMethod"
    BuiltEnvInfo:
      type: object
      properties:
        formatted_bucket_key:
          type: string
        id:
          type: string
        environment_type:
          $ref: "./environment-api.yml#/components/schemas/EnvironmentType"
        commit_sha:
          type: string
    BillingInfoRequestGroupByEnum:
      type: string
      default: APP
      enum:
        - APP
        - ENV
    BillingInfo:
      type: object
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        pricing_method:
          type: string
        compute_time:
          type: string
          format: date-time
        computed_price:
          type: number
        resource_invocation_total_duration:
          $ref: "#/components/schemas/Duration"
    Duration:
      type: object
      properties:
        amount:
          type: integer
        unit:
          $ref: "#/components/schemas/DurationUnit"
    DurationUnit:
      type: string
      enum:
        - MINUTES

    ##############################################################
    ###############  RequestBodies And Responses #################
    ##############################################################
    PagedResponse:
      type: object
      properties:
        page_size:
          type: integer
        page_number:
          type: integer
        has_previous:
          type: boolean
        count:
          type: integer
    InitiateStackDeploymentRequestBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/StackDeployment"
    InitiateStackDeploymentResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Stack"
    InitiateStackDeletionRequestBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/StackDeployment"
    InitiateStackDeletionResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Stack"
    PagedComputeStackResource:
      type: object
      allOf:
        - $ref: "./api.yml#/components/schemas/PagedResponse"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ComputeStackResource"

    GithubAppInstallationsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/GithubAppInstallation"
    CrupdateGithubAppInstallationsRequestBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/CreateGithubAppInstallation"
    CrupdateGithubAppInstallationsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/GithubAppInstallation"
    PaymentMethodResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PaymentMethod"

    PojaVersionsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PojaVersion"
    PagedStacksResponse:
      type: object
      allOf:
        - $ref: "./api.yml#/components/schemas/PagedResponse"
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Stack'
    PagedStackEvents:
      type: object
      allOf:
        - $ref: "./api.yml#/components/schemas/PagedResponse"
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/StackEvent'
    PagedStackOutputs:
      type: object
      allOf:
        - $ref: "./api.yml#/components/schemas/PagedResponse"
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/StackOutput'

    #############################################
    ###############  Exceptions #################
    #############################################
    ExceptionModel:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    BadRequestException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: BadRequestException
        message: Bad request
    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: NotAuthorizedException
        message: Not authorized
    ResourceNotFoundException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: ResourceNotFoundException
        message: Resource of type <T> identified by <I> not found
    TooManyRequestsException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: TooManyRequestsException
        message: Too many requests
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: InternalServerException
        message: Unexpected error
